{"version":3,"file":"static/js/250.d959851a.chunk.js","mappings":"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","sources":["components/API/api.js","webpack://react-homework-template/./src/components/pages/SingleMoviePage/single-movie-page.module.css?c7fc","components/pages/SingleMoviePage/SingleMoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '87ac6f2cf8642f95ea875aea3595be38',\n    language: 'en-US',\n  },\n});\n\nexport const getMoviesTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day?page=1');\n\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await instance.get(\n    `search/movie?query=${query}&page=1&include_adult=false`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\nexport const getMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews?page=1`);\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"single-movie-page_wrapper__zxAWF\",\"card\":\"single-movie-page_card__rQPkJ\",\"img\":\"single-movie-page_img__EXH2W\",\"btn\":\"single-movie-page_btn__X7q1C\",\"next\":\"single-movie-page_next__4qRpJ\"};","import { useParams, useNavigate, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'components/API/api';\nimport { Link } from 'react-router-dom';\nimport { Oval } from 'react-loader-spinner';\n\nimport css from './single-movie-page.module.css';\n\nconst SingleMoviePage = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/movies';\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        const result = await getMovieDetails(Number(movieId));\n        setMovie(result);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <div className={css.card}>\n      <button className={css.btn} onClick={goBack} type=\"button\">\n        Go back\n      </button>\n      {movie && (\n        <>\n          {error && <p>...error</p>}\n          {loading && (\n            <Oval\n              height={80}\n              width={80}\n              color=\"#4fa94d\"\n              wrapperStyle={{}}\n              wrapperClass=\"\"\n              visible={true}\n              ariaLabel=\"oval-loading\"\n              secondaryColor=\"#4fa94d\"\n              strokeWidth={2}\n              strokeWidthSecondary={2}\n            />\n          )}\n          <div className={css.wrapper}>\n            <img\n              className={css.img}\n              src={\n                movie.poster_path\n                  ? 'https://image.tmdb.org/t/p/w500' + movie.poster_path\n                  : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n              }\n              alt={movie.title}\n              width={300}\n            />\n            <div>\n              <h2 className={css.text}>\n                {movie.title ? movie.title : 'There is no title yet'} (\n                {new Date(movie.release_date).getFullYear()})\n              </h2>\n              <p className={css.description}>\n                User Score: {movie.vote_average.toFixed(1)}\n              </p>\n              <h3 className={css.text}>Overview</h3>\n              <p className={css.description}>{movie.overview}</p>\n              <h3 className={css.text}>Genres</h3>\n              <p className={css.description}>\n                {movie.genres.map(genre => genre.name).join(', ')}\n              </p>\n            </div>\n          </div>\n\n          <div>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <Link className={css.next} state={{ from }} to={`/movies/${movieId}/cast`}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link className={css.next} state={{ from }} to={`/movies/${movieId}/reviews`}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n            <Outlet />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SingleMoviePage;\n"],"names":["instance","axios","baseURL","params","api_key","language","getMoviesTrending","get","data","results","getSearchMovies","query","getMovieDetails","id","getMoviesCast","cast","getMoviesReviews","useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","Number","result","massage","className","css","onClick","type","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","src","poster_path","alt","title","Date","release_date","getFullYear","vote_average","toFixed","overview","genres","map","genre","name","join","to"],"sourceRoot":""}